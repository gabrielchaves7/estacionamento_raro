// Mocks generated by Mockito 5.0.17 from annotations
// in domain/test/repositories/registro/registro_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:domain/src/data/datasource/registro/registro_datasource_impl.dart'
    as _i3;
import 'package:domain/src/data/models/registro/registro_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRegistroModel_0 extends _i1.Fake implements _i2.RegistroModel {}

/// A class which mocks [RegistroDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegistroDataSource extends _i1.Mock
    implements _i3.RegistroDataSource {
  MockRegistroDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.RegistroModel>?> all() =>
      (super.noSuchMethod(Invocation.method(#all, []),
              returnValue: Future<List<_i2.RegistroModel>?>.value())
          as _i4.Future<List<_i2.RegistroModel>?>);
  @override
  _i4.Future<_i2.RegistroModel> create(
          {DateTime? horarioEntrada, String? placa}) =>
      (super.noSuchMethod(
          Invocation.method(
              #create, [], {#horarioEntrada: horarioEntrada, #placa: placa}),
          returnValue:
              Future<_i2.RegistroModel>.value(_FakeRegistroModel_0())) as _i4
          .Future<_i2.RegistroModel>);
}
